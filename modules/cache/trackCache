import fs from 'fs';
import path from 'path';

export function cleanCache(cacheDir) {
  fs.readdir(cacheDir, (err, files) => {
    if (err) {
      console.error('–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∫—ç—à–∞:', err);
      return;
    }
    files.forEach(file => {
      const filePath = path.join(cacheDir, file);
      fs.stat(filePath, (err, stats) => {
        if (err) {
          console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ñ–∞–π–ª–∞:', err);
          return;
        }
        // –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª—ã —Å—Ç–∞—Ä—à–µ 1 —á–∞—Å–∞
        if (Date.now() - stats.mtimeMs > 3600 * 1000) {
          fs.unlink(filePath, err => {
            if (err) console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞ –∏–∑ –∫—ç—à–∞:', err);
            else console.log(`üóë –£–¥–∞–ª—ë–Ω —Ñ–∞–π–ª –∏–∑ –∫—ç—à–∞: ${file}`);
          });
        }
      });
    });
  });
}
